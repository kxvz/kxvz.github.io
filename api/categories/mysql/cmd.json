{"name":"cmd","slug":"mysql/cmd","count":1,"postlist":[{"title":"Mysql 基本命令","slug":"Mysql-基本命令","date":"2018-12-11T10:06:07.000Z","updated":"2018-12-11T10:06:07.389Z","comments":true,"path":"api/articles/Mysql-基本命令.json","excerpt":"","keywords":null,"cover":null,"content":"<p>启动：net start mySql;</p>\n<p>  进入：mysql -u root -p/mysql -h localhost -u root -p databaseName;</p>\n<p>  列出数据库：show databases;</p>\n<p>  选择数据库：use databaseName;</p>\n<p>  列出表格：show tables；</p>\n<p>  显示表格列的属性：show columns from tableName；</p>\n<p>  建立数据库：source fileName.txt;</p>\n<p>  匹配字符：可以用通配符_代表任何一个字符，％代表任何字符串;</p>\n<p>  增加一个字段：alter table tabelName add column fieldName dateType;</p>\n<p>  增加多个字段：alter table tabelName add column fieldName1 dateType,add columns fieldName2 dateType;</p>\n<p>  多行命令输入:注意不能将单词断开;当插入或更改数据时，不能将字段的字符串展开到多行里，否则硬回车将被储存到数据中;</p>\n<p>  增加一个管理员帐户：grant all on <em>.</em> to user@localhost identified by “password”;</p>\n<p>  每条语句输入完毕后要在末尾填加分号’;’，或者填加’\\g’也可以；</p>\n<p>  查询时间：select now();</p>\n<p>  查询当前用户：select user();</p>\n<p>  查询数据库版本：select version();</p>\n<p>  查询当前使用的数据库：select database();</p>\n<p>  1、删除student_course数据库中的students数据表：</p>\n<p>  rm -f student_course/students.*</p>\n<p>  2、备份数据库：(将数据库test备份)</p>\n<p>  mysqldump -u root -p test&gt;c:\\test.txt</p>\n<p>  备份表格：(备份test数据库下的mytable表格)</p>\n<p>  mysqldump -u root -p test mytable&gt;c:\\test.txt</p>\n<p>  将备份数据导入到数据库：(导回test数据库)</p>\n<p>  mysql -u root -p test</p>\n<p>  3、创建临时表：(建立临时表zengchao)</p>\n<p>  create temporary table zengchao(name varchar(10));</p>\n<p>  4、创建表是先判断表是否存在</p>\n<p>  create table if not exists students(……);</p>\n<p>  5、从已经有的表中复制表的结构</p>\n<p>  create table table2 select * from table1 where 1&lt;&gt;1;</p>\n<p>  6、复制表</p>\n<p>  create table table2 select * from table1;</p>\n<p>  7、对表重新命名</p>\n<p>  alter table table1 rename as table2;</p>\n<p>  8、修改列的类型</p>\n<p>  alter table table1 modify id int unsigned;//修改列id的类型为int unsigned</p>\n<p>  alter table table1 change id sid int unsigned;//修改列id的名字为sid，而且把属性修改为int unsigned</p>\n<p>  9、创建索引</p>\n<p>  alter table table1 add index ind_id (id);</p>\n<p>  create index ind_id on table1 (id);</p>\n<p>  create unique index ind_id on table1 (id);//建立唯一性索引</p>\n<p>  10、删除索引</p>\n<p>  drop index idx_id on table1;</p>\n<p>  alter table table1 drop index ind_id;</p>\n<p>  11、联合字符或者多个列(将列id与”:”和列name和”=”连接)</p>\n<p>  select concat(id,’:’,name,’=’) from students;</p>\n<p>  12、limit(选出10到20条)&lt;第一个记录集的编号是0&gt;</p>\n<p>  select * from students order by id limit 9,10;</p>\n<p>  13、MySQL不支持的功能</p>\n<p>  事务，视图，外键和引用完整性，存储过程和触发器</p>\n<p>  14、MySQL会使用索引的操作符号</p>\n<p>  &lt;,&lt;=,&gt;=,&gt;,=,between,in,不带%或者_开头的like</p>\n<p>  15、使用索引的缺点</p>\n<p>  1)减慢增删改数据的速度；</p>\n<p>  2）占用磁盘空间；</p>\n<p>  3）增加查询优化器的负担；</p>\n<p>  当查询优化器生成执行计划时，会考虑索引，太多的索引会给查询优化器增加工作量，导致无法选择最优的查询方案；</p>\n<p>  16、分析索引效率</p>\n<p>  方法：在一般的SQL语句前加上explain；</p>\n<p>  分析结果的含义：</p>\n<p>  1）table：表名；</p>\n<p>  2）type：连接的类型，(ALL/Range/Ref)。其中ref是最理想的；</p>\n<p>  3）possible_keys：查询可以利用的索引名；</p>\n<p>  4）key：实际使用的索引；</p>\n<p>  5）key_len：索引中被使用部分的长度（字节）；</p>\n<p>  6）ref：显示列名字或者”const”（不明白什么意思）；</p>\n<p>  7）rows：显示MySQL认为在找到正确结果之前必须扫描的行数；</p>\n<p>  8）extra：MySQL的建议；</p>\n<p>  17、使用较短的定长列</p>\n<p>  1）尽可能使用较短的数据类型；</p>\n<p>  2）尽可能使用定长数据类型；</p>\n<p>  a）用char代替varchar，固定长度的数据处理比变长的快些；</p>\n<p>  b）对于频繁修改的表，磁盘容易形成碎片，从而影响数据库的整体性能；</p>\n<p>  c）万一出现数据表崩溃，使用固定长度数据行的表更容易重新构造。使用固定长度的数据行，每个记录的开始位置都是固定记录长度的倍数，可以很容易被检测到，但是使用可变长度的数据行就不一定了；</p>\n<p>  d）对于MyISAM类型的数据表，虽然转换成固定长度的数据列可以提高性能，但是占据的空间也大；</p>\n<p>  18、使用not null和enum</p>\n<p>  尽量将列定义为not null，这样可使数据的出来更快，所需的空间更少，而且在查询时，MySQL不需要检查是否存在特例，即null值，从而优化查询；</p>\n<p>  如果一列只含有有限数目的特定值，如性别，是否有效或者入学年份等，在这种情况下应该考虑将其转换为enum列的值，MySQL处理的更快，因为所有的enum值在系统内都是以标识数值来表示的；</p>\n<p>  19、使用optimize table</p>\n<p>  对于经常修改的表，容易产生碎片，使在查询数据库时必须读取更多的磁盘块，降低查询性能。具有可变长的表都存在磁盘碎片问题，这个问题对blob数据类型更为突出，因为其尺寸变化非常大。可以通过使用optimize table来整理碎片，保证数据库性能不下降，优化那些受碎片影响的数据表。 optimize table可以用于MyISAM和BDB类型的数据表。实际上任何碎片整理方法都是用mysqldump来转存数据表，然后使用转存后的文件并重新建数据表；</p>\n<p>  20、使用procedure analyse()</p>\n<p>  可以使用procedure analyse()显示最佳类型的建议，使用很简单，在select语句后面加上procedure analyse()就可以了；例如：</p>\n<p>  select * from students procedure analyse();</p>\n<p>  select * from students procedure analyse(16,256);</p>\n<p>  第二条语句要求procedure analyse()不要建议含有多于16个值，或者含有多于256字节的enum类型，如果没有限制，输出可能会很长；</p>\n<p>  21、使用查询缓存</p>\n<p>  1）查询缓存的工作方式：</p>\n<p>  第一次执行某条select语句时，服务器记住该查询的文本内容和查询结果，存储在缓存中，下次碰到这个语句时，直接从缓存中返回结果；当更新数据表后，该数据表的任何缓存查询都变成无效的，并且会被丢弃。</p>\n<p>  2）配置缓存参数：</p>\n<p>  变量：query_cache _type，查询缓存的操作模式。有3中模式，0：不缓存；1：缓存查询，除非与 select sql_no_cache开头；2：根据需要只缓存那些以select sql_cache开头的查询； query_cache_size：设置查询缓存的最大结果集的大小，比这个值大的不会被缓存。</p>\n<p>  22、调整硬件</p>\n<p>  1）在机器上装更多的内存；</p>\n<p>  2）增加更快的硬盘以减少I/O等待时间；</p>\n<p>  寻道时间是决定性能的主要因素，逐字地移动磁头是最慢的，一旦磁头定位，从磁道读则很快；</p>\n<p>  3）在不同的物理硬盘设备上重新分配磁盘活动；</p>\n<p>  如果可能，应将最繁忙的数据库存放在不同的物理设备上，这跟使用同一物理设备的不同分区是不同的，因为它们将争用相同的物理资源（磁头）。</p>\n","text":"启动：net start mySql;  进入：mysql -u root -p/mysql -h localhost -u root -p databaseName;  列出数据库：show databases;  选择数据库：use databaseName;  列出表格：s","link":"","raw":null,"photos":[],"categories":[{"name":"mysql","slug":"mysql","count":8,"path":"api/categories/mysql.json"},{"name":"cmd","slug":"mysql/cmd","count":1,"path":"api/categories/mysql/cmd.json"}],"tags":[{"name":"mysql","slug":"mysql","count":10,"path":"api/tags/mysql.json"},{"name":"cmd","slug":"cmd","count":10,"path":"api/tags/cmd.json"}]}]}